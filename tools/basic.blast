{"cells":[{"kind":2,"language":"javascript","value":"// let ic = icblast({local:true, local_host:\"http://localhost:8080\"});\n\nlet can = await ic(\"xgnzu-riaaa-aaaal-qc64a-cai\");\nlog(me)\nglobal({can})\n"},{"kind":2,"language":"javascript","value":"let icp_ledger = await ic(\"ryjl3-tyaaa-aaaaa-aaaba-cai\");\nlog(me);\nawait icp_ledger.icrc1_balance_of({owner:me}).then(log);\n\nlet ckbtc_ledger = await ic(\"mxzaz-hqaaa-aaaar-qaada-cai\");\nawait ckbtc_ledger.icrc1_balance_of({owner:me}).then(log);\n\n\nglobal({icp_ledger, ckbtc_ledger});"},{"kind":2,"language":"javascript","value":"await can.stats().then(log);"},{"kind":2,"language":"javascript","value":"// ICP to BTC\nawait can.create_vector({\n  destination:{\n    ledger:\"mxzaz-hqaaa-aaaar-qaada-cai\",\n    },\n  source:{\n    ledger:\"ryjl3-tyaaa-aaaaa-aaaba-cai\",\n    },\n  owner:me,\n  algorate:{\n    max:4000,\n    discount: 0.01\n    }\n  }).then(log);\n"},{"kind":2,"language":"javascript","value":"// BTC to ICP\nawait can.create_vector({\n    destination:{\n      ledger:\"ryjl3-tyaaa-aaaaa-aaaba-cai\",\n      },\n    source:{\n      ledger:\"mxzaz-hqaaa-aaaar-qaada-cai\",\n      },\n    owner:me,\n    algorate:{\n      max:0.0004,\n      discount: 0.01\n      }\n    }).then(log);"},{"kind":2,"language":"javascript","value":""},{"kind":2,"language":"javascript","value":"let tx = await can.get_vector(0);\n\nlet transfer = {\n    to: tx.source.address,\n    amount: 300000000\n};\n\nawait icp_ledger.icrc1_transfer(transfer).then(log);"},{"kind":2,"language":"javascript","value":"let tx = await can.get_vector(1);\n\nlet transfer = {\n    to: tx.source.address,\n    amount: 5880\n};\n\nawait ckbtc_ledger.icrc1_transfer(transfer).then(log);"},{"kind":2,"language":"javascript","value":"await can.get_vector(0).then(log)"},{"kind":2,"language":"javascript","value":"await can.get_vector(1).then(log)"},{"kind":2,"language":"javascript","value":"await can.show_log().then(log)"},{"kind":2,"language":"javascript","value":"await can.get_events({start:0, length:100}).then(log)"},{"kind":2,"language":"javascript","value":"await can.get_vector_events({id:0, start:0, length:100}).then(log)"}]}